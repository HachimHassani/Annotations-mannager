{"ast":null,"code":"\"use strict\";\n\nvar __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n    return t;\n  };\n  return __assign.apply(this, arguments);\n};\nvar __spreadArrays = this && this.__spreadArrays || function () {\n  for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\n  for (var r = Array(s), k = 0, i = 0; i < il; i++) for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++) r[k] = a[j];\n  return r;\n};\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\nexports.__esModule = true;\nvar react_1 = __importDefault(require(\"react\"));\nvar Mark_1 = __importDefault(require(\"./Mark\"));\nvar utils_1 = require(\"./utils\");\nvar Split = function (props) {\n  if (props.mark) return react_1[\"default\"].createElement(Mark_1[\"default\"], __assign({}, props));\n  return react_1[\"default\"].createElement(\"span\", {\n    \"data-start\": props.start,\n    \"data-end\": props.end,\n    onClick: function () {\n      return props.onClick({\n        start: props.start,\n        end: props.end\n      });\n    }\n  }, props.content);\n};\nvar TextAnnotator = function (props) {\n  var getSpan = function (span) {\n    // TODO: Better typings here.\n    if (props.getSpan) return props.getSpan(span);\n    return {\n      start: span.start,\n      end: span.end\n    };\n  };\n  var handleMouseUp = function () {\n    var _a;\n    if (!props.onChange) return;\n    var selection = window.getSelection();\n    if (utils_1.selectionIsEmpty(selection)) return;\n    var start = parseInt(selection.anchorNode.parentElement.getAttribute('data-start'), 10) + selection.anchorOffset;\n    var end = parseInt(selection.focusNode.parentElement.getAttribute('data-start'), 10) + selection.focusOffset;\n    if (utils_1.selectionIsBackwards(selection)) {\n      ;\n      _a = [end, start], start = _a[0], end = _a[1];\n    }\n    props.onChange(__spreadArrays(props.value, [getSpan({\n      start: start,\n      end: end,\n      text: content.slice(start, end)\n    })]));\n    window.getSelection().empty();\n  };\n  var handleSplitClick = function (_a) {\n    var start = _a.start,\n      end = _a.end;\n    // Find and remove the matching split.\n    var splitIndex = props.value.findIndex(function (s) {\n      return s.start === start && s.end === end;\n    });\n    if (splitIndex >= 0) {\n      props.onChange(__spreadArrays(props.value.slice(0, splitIndex), props.value.slice(splitIndex + 1)));\n    }\n  };\n  var content = props.content,\n    value = props.value,\n    style = props.style;\n  var splits = utils_1.splitWithOffsets(content, value);\n  return react_1[\"default\"].createElement(\"div\", {\n    style: style,\n    onMouseUp: handleMouseUp\n  }, splits.map(function (split) {\n    return react_1[\"default\"].createElement(Split, __assign({\n      key: split.start + \"-\" + split.end\n    }, split, {\n      onClick: handleSplitClick\n    }));\n  }));\n};\nexports[\"default\"] = TextAnnotator;","map":{"version":3,"names":["react_1","__importDefault","require","Mark_1","utils_1","Split","props","mark","createElement","__assign","start","end","onClick","content","TextAnnotator","getSpan","span","handleMouseUp","onChange","selection","window","getSelection","selectionIsEmpty","parseInt","anchorNode","parentElement","getAttribute","anchorOffset","focusNode","focusOffset","selectionIsBackwards","_a","__spreadArrays","value","text","slice","empty","handleSplitClick","splitIndex","findIndex","s","style","splits","splitWithOffsets","onMouseUp","map","split","key","exports"],"sources":["C:\\Users\\msi\\Documents\\React-TS-login-using-jwt\\node_modules\\react-text-annotate\\src\\TextAnnotator.tsx"],"sourcesContent":["import React from 'react'\n\nimport Mark from './Mark'\nimport {selectionIsEmpty, selectionIsBackwards, splitWithOffsets} from './utils'\nimport {Span} from './span'\n\nconst Split = props => {\n  if (props.mark) return <Mark {...props} />\n\n  return (\n    <span\n      data-start={props.start}\n      data-end={props.end}\n      onClick={() => props.onClick({start: props.start, end: props.end})}\n    >\n      {props.content}\n    </span>\n  )\n}\n\ninterface TextSpan extends Span {\n  text: string\n}\n\ntype TextBaseProps<T> = {\n  content: string\n  value: T[]\n  onChange: (value: T[]) => any\n  getSpan?: (span: TextSpan) => T\n  // TODO: determine whether to overwrite or leave intersecting ranges.\n}\n\ntype TextAnnotatorProps<T> = React.HTMLAttributes<HTMLDivElement> & TextBaseProps<T>\n\nconst TextAnnotator = <T extends Span>(props: TextAnnotatorProps<T>) => {\n  const getSpan = (span: TextSpan): T => {\n    // TODO: Better typings here.\n    if (props.getSpan) return props.getSpan(span) as T\n    return {start: span.start, end: span.end} as T\n  }\n\n  const handleMouseUp = () => {\n    if (!props.onChange) return\n\n    const selection = window.getSelection()\n\n    if (selectionIsEmpty(selection)) return\n\n    let start =\n      parseInt(selection.anchorNode.parentElement.getAttribute('data-start'), 10) +\n      selection.anchorOffset\n    let end =\n      parseInt(selection.focusNode.parentElement.getAttribute('data-start'), 10) +\n      selection.focusOffset\n\n    if (selectionIsBackwards(selection)) {\n      ;[start, end] = [end, start]\n    }\n\n    props.onChange([...props.value, getSpan({start, end, text: content.slice(start, end)})])\n\n    window.getSelection().empty()\n  }\n\n  const handleSplitClick = ({start, end}) => {\n    // Find and remove the matching split.\n    const splitIndex = props.value.findIndex(s => s.start === start && s.end === end)\n    if (splitIndex >= 0) {\n      props.onChange([...props.value.slice(0, splitIndex), ...props.value.slice(splitIndex + 1)])\n    }\n  }\n\n  const {content, value, style} = props\n  const splits = splitWithOffsets(content, value)\n  return (\n    <div style={style} onMouseUp={handleMouseUp}>\n      {splits.map(split => (\n        <Split key={`${split.start}-${split.end}`} {...split} onClick={handleSplitClick} />\n      ))}\n    </div>\n  )\n}\n\nexport default TextAnnotator\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}